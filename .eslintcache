[{"D:\\dev\\frontend\\knUI\\src\\index.tsx":"1","D:\\dev\\frontend\\knUI\\src\\config.js":"2","D:\\dev\\frontend\\knUI\\src\\serviceWorker.ts":"3","D:\\dev\\frontend\\knUI\\src\\routes.tsx":"4","D:\\dev\\frontend\\knUI\\src\\theme\\index.ts":"5","D:\\dev\\frontend\\knUI\\src\\settings\\constants.ts":"6","D:\\dev\\frontend\\knUI\\src\\context\\auth.tsx":"7","D:\\dev\\frontend\\knUI\\src\\containers\\Dashboard\\Dashboard.tsx":"8","D:\\dev\\frontend\\knUI\\src\\components\\InlineLoader\\InlineLoader.tsx":"9","D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Layout.tsx":"10","D:\\dev\\frontend\\knUI\\src\\containers\\Home\\Home.tsx":"11","D:\\dev\\frontend\\knUI\\src\\containers\\Orders\\Orders.tsx":"12","D:\\dev\\frontend\\knUI\\src\\containers\\Settings\\Settings.tsx":"13","D:\\dev\\frontend\\knUI\\src\\containers\\ProductForm\\Products.tsx":"14","D:\\dev\\frontend\\knUI\\src\\containers\\Profile\\Profile.tsx":"15","D:\\dev\\frontend\\knUI\\src\\containers\\SiteSettingForm\\SiteSettingForm.tsx":"16","D:\\dev\\frontend\\knUI\\src\\containers\\Customers\\Customers.tsx":"17","D:\\dev\\frontend\\knUI\\src\\containers\\StaffMembers\\StaffMembers.tsx":"18","D:\\dev\\frontend\\knUI\\src\\containers\\Projects\\Projects.tsx":"19","D:\\dev\\frontend\\knUI\\src\\containers\\Login\\Login.tsx":"20","D:\\dev\\frontend\\knUI\\src\\containers\\NotFound\\NotFound.tsx":"21","D:\\dev\\frontend\\knUI\\src\\containers\\ResetPassword\\ResetPassword.tsx":"22","D:\\dev\\frontend\\knUI\\src\\containers\\SignUp\\SignUp.tsx":"23","D:\\dev\\frontend\\knUI\\src\\components\\FlexBox\\FlexBox.ts":"24","D:\\dev\\frontend\\knUI\\src\\containers\\SignUp\\SignUp.style.tsx":"25","D:\\dev\\frontend\\knUI\\src\\components\\FormFields\\FormFields.tsx":"26","D:\\dev\\frontend\\knUI\\src\\containers\\ResetPassword\\ResetPassword.style.tsx":"27","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\LineChart\\LineChart.tsx":"28","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\RadialBarChart\\RadialBarChart.tsx":"29","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\ColumnChart\\ColumnChart.tsx":"30","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\DonutChart\\DonutChart.tsx":"31","D:\\dev\\frontend\\knUI\\src\\components\\Button\\Button.tsx":"32","D:\\dev\\frontend\\knUI\\src\\components\\Input\\Input.tsx":"33","D:\\dev\\frontend\\knUI\\src\\components\\Button\\Button.style.tsx":"34","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\DonutChart\\DonutChart.style.tsx":"35","D:\\dev\\frontend\\knUI\\src\\components\\AllSvgIcon.tsx":"36","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\ColumnChart\\ColumnChart.style.tsx":"37","D:\\dev\\frontend\\knUI\\src\\components\\Box\\Box.tsx":"38","D:\\dev\\frontend\\knUI\\src\\components\\Charts\\Chart.tsx":"39","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\RadialBarChart\\RadialBarChart.style.tsx":"40","D:\\dev\\frontend\\knUI\\src\\components\\Box\\Box.style.tsx":"41","D:\\dev\\frontend\\knUI\\src\\containers\\NotFound\\NotFound.style.tsx":"42","D:\\dev\\frontend\\knUI\\src\\containers\\Login\\Login.style.tsx":"43","D:\\dev\\frontend\\knUI\\src\\containers\\Projects\\Projects.style.tsx":"44","D:\\dev\\frontend\\knUI\\src\\components\\WrapperStyle.tsx":"45","D:\\dev\\frontend\\knUI\\src\\components\\NoResult\\NoResult.tsx":"46","D:\\dev\\frontend\\knUI\\src\\context\\DrawerContext.tsx":"47","D:\\dev\\frontend\\knUI\\src\\components\\CheckBox\\CheckBox.tsx":"48","D:\\dev\\frontend\\knUI\\src\\components\\ProgressBar\\ProgressBar.tsx":"49","D:\\dev\\frontend\\knUI\\src\\components\\Select\\Select.tsx":"50","D:\\dev\\frontend\\knUI\\src\\containers\\StaffMembers\\StaffMembers.style.tsx":"51","D:\\dev\\frontend\\knUI\\src\\containers\\Customers\\Customers.style.tsx":"52","D:\\dev\\frontend\\knUI\\src\\components\\DrawerBox\\DrawerBox.tsx":"53","D:\\dev\\frontend\\knUI\\src\\containers\\DrawerItems\\DrawerItems.style.tsx":"54","D:\\dev\\frontend\\knUI\\src\\components\\Textarea\\Textarea.tsx":"55","D:\\dev\\frontend\\knUI\\src\\components\\Uploader\\Uploader.tsx":"56","D:\\dev\\frontend\\knUI\\src\\components\\Placeholder\\Placeholder.tsx":"57","D:\\dev\\frontend\\knUI\\src\\components\\ProductCard\\ProductCard.tsx":"58","D:\\dev\\frontend\\knUI\\src\\context\\create-context.tsx":"59","D:\\dev\\frontend\\knUI\\src\\components\\NoResult\\NoResult.style.tsx":"60","D:\\dev\\frontend\\knUI\\src\\components\\ProductCard\\ProductCard.style.tsx":"61","D:\\dev\\frontend\\knUI\\src\\components\\Image\\Image.tsx":"62","D:\\dev\\frontend\\knUI\\src\\settings\\useDeviceType.js":"63","D:\\dev\\frontend\\knUI\\src\\settings\\useComponentSize.js":"64","D:\\dev\\frontend\\knUI\\src\\containers\\Orders\\Orders.style.tsx":"65","D:\\dev\\frontend\\knUI\\src\\components\\SettingsCard\\SettingsCard.tsx":"66","D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Topbar\\Topbar.style.tsx":"67","D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Layout.style.tsx":"68","D:\\dev\\frontend\\knUI\\src\\containers\\DrawerItems\\DrawerItems.tsx":"69","D:\\dev\\frontend\\knUI\\src\\components\\ProjectCard\\ProjectCard.tsx":"70","D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Topbar\\Topbar.tsx":"71","D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Sidebar\\Sidebar.tsx":"72","D:\\dev\\frontend\\knUI\\src\\settings\\debounce.ts":"73","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\StickerCard\\StickerCard.tsx":"74","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\MapWidget\\MapWidget.tsx":"75","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\GradiantGraphChart\\GradiantGraphChart.tsx":"76","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\GraphChart\\GraphChart.tsx":"77","D:\\dev\\frontend\\knUI\\src\\containers\\ProductForm\\ProductUpdateForm.tsx":"78","D:\\dev\\frontend\\knUI\\src\\containers\\ProductForm\\ProductForm.tsx":"79","D:\\dev\\frontend\\knUI\\src\\components\\ProjectCard\\ProjectCard.style.tsx":"80","D:\\dev\\frontend\\knUI\\src\\components\\Drawer\\Drawer.tsx":"81","D:\\dev\\frontend\\knUI\\src\\containers\\CampaingForm\\CampaingForm.tsx":"82","D:\\dev\\frontend\\knUI\\src\\components\\Notification\\Notification.tsx":"83","D:\\dev\\frontend\\knUI\\src\\containers\\CategoryForm\\CategoryForm.tsx":"84","D:\\dev\\frontend\\knUI\\src\\components\\Popover\\Popover.tsx":"85","D:\\dev\\frontend\\knUI\\src\\containers\\StaffMemberForm\\StaffMemberForm.tsx":"86","D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Sidebar\\Sidebar.style.tsx":"87","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\MapWidget\\MapWidget.style.tsx":"88","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\StickerCard\\StickerCard.style.tsx":"89","D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\GradiantGraphChart\\GradiantGraphChart.style.tsx":"90","D:\\dev\\frontend\\knUI\\src\\components\\Notification\\NotificationCard.tsx":"91","D:\\dev\\frontend\\knUI\\src\\components\\Notification\\Notification.style.tsx":"92","D:\\dev\\frontend\\knUI\\src\\components\\PhoneInput\\PhoneInput.tsx":"93"},{"size":3561,"mtime":1608732367336,"results":"94","hashOfConfig":"95"},{"size":1014,"mtime":1606913024927,"results":"96","hashOfConfig":"95"},{"size":5198,"mtime":1581722062000,"results":"97","hashOfConfig":"95"},{"size":4857,"mtime":1607861214076,"results":"98","hashOfConfig":"95"},{"size":3896,"mtime":1581722062000,"results":"99","hashOfConfig":"95"},{"size":709,"mtime":1601484096633,"results":"100","hashOfConfig":"95"},{"size":2117,"mtime":1608810034510,"results":"101","hashOfConfig":"95"},{"size":6568,"mtime":1581722062000,"results":"102","hashOfConfig":"95"},{"size":1359,"mtime":1604257467065,"results":"103","hashOfConfig":"95"},{"size":1883,"mtime":1607807671132,"results":"104","hashOfConfig":"95"},{"size":3815,"mtime":1607861279852,"results":"105","hashOfConfig":"95"},{"size":9310,"mtime":1581722062000,"results":"106","hashOfConfig":"95"},{"size":2321,"mtime":1601588721529,"results":"107","hashOfConfig":"95"},{"size":6793,"mtime":1607861148167,"results":"108","hashOfConfig":"95"},{"size":15450,"mtime":1608759044306,"results":"109","hashOfConfig":"95"},{"size":5349,"mtime":1581722062000,"results":"110","hashOfConfig":"95"},{"size":5597,"mtime":1581722062000,"results":"111","hashOfConfig":"95"},{"size":6028,"mtime":1581722062000,"results":"112","hashOfConfig":"95"},{"size":11041,"mtime":1600978105724,"results":"113","hashOfConfig":"95"},{"size":8141,"mtime":1607274819745,"results":"114","hashOfConfig":"95"},{"size":554,"mtime":1581722062000,"results":"115","hashOfConfig":"95"},{"size":5351,"mtime":1601041286809,"results":"116","hashOfConfig":"95"},{"size":5890,"mtime":1607285320615,"results":"117","hashOfConfig":"95"},{"size":489,"mtime":1581722062000,"results":"118","hashOfConfig":"95"},{"size":889,"mtime":1600598365819,"results":"119","hashOfConfig":"95"},{"size":1365,"mtime":1581722062000,"results":"120","hashOfConfig":"95"},{"size":936,"mtime":1600804975484,"results":"121","hashOfConfig":"95"},{"size":2174,"mtime":1581722062000,"results":"122","hashOfConfig":"95"},{"size":1993,"mtime":1581722062000,"results":"123","hashOfConfig":"95"},{"size":3051,"mtime":1581722062000,"results":"124","hashOfConfig":"95"},{"size":2051,"mtime":1581722062000,"results":"125","hashOfConfig":"95"},{"size":684,"mtime":1581722062000,"results":"126","hashOfConfig":"95"},{"size":541,"mtime":1581722062000,"results":"127","hashOfConfig":"95"},{"size":1044,"mtime":1581722062000,"results":"128","hashOfConfig":"95"},{"size":835,"mtime":1581722062000,"results":"129","hashOfConfig":"95"},{"size":165128,"mtime":1581722062000,"results":"130","hashOfConfig":"95"},{"size":1310,"mtime":1581722062000,"results":"131","hashOfConfig":"95"},{"size":735,"mtime":1581722062000,"results":"132","hashOfConfig":"95"},{"size":159,"mtime":1581722062000,"results":"133","hashOfConfig":"95"},{"size":1057,"mtime":1581722062000,"results":"134","hashOfConfig":"95"},{"size":879,"mtime":1581722062000,"results":"135","hashOfConfig":"95"},{"size":643,"mtime":1581722062000,"results":"136","hashOfConfig":"95"},{"size":889,"mtime":1581722062000,"results":"137","hashOfConfig":"95"},{"size":1782,"mtime":1600978088313,"results":"138","hashOfConfig":"95"},{"size":751,"mtime":1581722062000,"results":"139","hashOfConfig":"95"},{"size":944,"mtime":1581722062000,"results":"140","hashOfConfig":"95"},{"size":812,"mtime":1608809044816,"results":"141","hashOfConfig":"95"},{"size":358,"mtime":1581722062000,"results":"142","hashOfConfig":"95"},{"size":212,"mtime":1581722062000,"results":"143","hashOfConfig":"95"},{"size":1656,"mtime":1581722062000,"results":"144","hashOfConfig":"95"},{"size":1014,"mtime":1600589541274,"results":"145","hashOfConfig":"95"},{"size":1014,"mtime":1600589444900,"results":"146","hashOfConfig":"95"},{"size":477,"mtime":1581722062000,"results":"147","hashOfConfig":"95"},{"size":1140,"mtime":1581722062000,"results":"148","hashOfConfig":"95"},{"size":541,"mtime":1581722062000,"results":"149","hashOfConfig":"95"},{"size":2838,"mtime":1607860321161,"results":"150","hashOfConfig":"95"},{"size":655,"mtime":1581722062000,"results":"151","hashOfConfig":"95"},{"size":2346,"mtime":1607206780343,"results":"152","hashOfConfig":"95"},{"size":1517,"mtime":1581722062000,"results":"153","hashOfConfig":"95"},{"size":1208,"mtime":1581722062000,"results":"154","hashOfConfig":"95"},{"size":3945,"mtime":1581722062000,"results":"155","hashOfConfig":"95"},{"size":639,"mtime":1581722062000,"results":"156","hashOfConfig":"95"},{"size":295,"mtime":1581722062000,"results":"157","hashOfConfig":"95"},{"size":1772,"mtime":1581722062000,"results":"158","hashOfConfig":"95"},{"size":1549,"mtime":1600589515135,"results":"159","hashOfConfig":"95"},{"size":1172,"mtime":1581722062000,"results":"160","hashOfConfig":"95"},{"size":3274,"mtime":1607808248887,"results":"161","hashOfConfig":"95"},{"size":572,"mtime":1607807659154,"results":"162","hashOfConfig":"95"},{"size":3275,"mtime":1601146831853,"results":"163","hashOfConfig":"95"},{"size":1453,"mtime":1602368786885,"results":"164","hashOfConfig":"95"},{"size":4197,"mtime":1604524732469,"results":"165","hashOfConfig":"95"},{"size":2075,"mtime":1606751766696,"results":"166","hashOfConfig":"95"},{"size":430,"mtime":1581722062000,"results":"167","hashOfConfig":"95"},{"size":1261,"mtime":1581722062000,"results":"168","hashOfConfig":"95"},{"size":3707,"mtime":1581722062000,"results":"169","hashOfConfig":"95"},{"size":3215,"mtime":1581722062000,"results":"170","hashOfConfig":"95"},{"size":2420,"mtime":1581722062000,"results":"171","hashOfConfig":"95"},{"size":11226,"mtime":1606916500265,"results":"172","hashOfConfig":"95"},{"size":13621,"mtime":1607852898513,"results":"173","hashOfConfig":"95"},{"size":3972,"mtime":1602365680194,"results":"174","hashOfConfig":"95"},{"size":294,"mtime":1581722062000,"results":"175","hashOfConfig":"95"},{"size":8509,"mtime":1605187608394,"results":"176","hashOfConfig":"95"},{"size":668,"mtime":1581722062000,"results":"177","hashOfConfig":"95"},{"size":8512,"mtime":1605187648278,"results":"178","hashOfConfig":"95"},{"size":285,"mtime":1581722062000,"results":"179","hashOfConfig":"95"},{"size":6659,"mtime":1605187667147,"results":"180","hashOfConfig":"95"},{"size":2016,"mtime":1601485972243,"results":"181","hashOfConfig":"95"},{"size":3068,"mtime":1581722062000,"results":"182","hashOfConfig":"95"},{"size":1965,"mtime":1581722062000,"results":"183","hashOfConfig":"95"},{"size":804,"mtime":1581722062000,"results":"184","hashOfConfig":"95"},{"size":400,"mtime":1581722062000,"results":"185","hashOfConfig":"95"},{"size":2883,"mtime":1581722062000,"results":"186","hashOfConfig":"95"},{"size":276,"mtime":1581722062000,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"qg6qzd",{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"190"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"190"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"190"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"190"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"287","messages":"288","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"190"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"190"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"190"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"D:\\dev\\frontend\\knUI\\src\\index.tsx",[],["384","385"],"D:\\dev\\frontend\\knUI\\src\\config.js",["386"],"const dev = {\r\n  //STRIPE_KEY: \"pk_test_v1amvR35uoCNduJfkqGB8RLD\",\r\n  s3: {\r\n    REGION: \"us-east-1\",\r\n    BUCKET: \"auth-dev-attachmentsbucket-1m240br8q5mjl\",\r\n    //BUCKET:\r\n  },\r\n  apiGateway: {\r\n    REGION: \"af-south-1\",\r\n    URL: \"https://kapi.kazinzuri.com/dev\",\r\n  },\r\n  cognito: {\r\n    REGION: \"us-east-1\",\r\n    USER_POOL_ID: \"us-east-1_BsILgENSm\",\r\n    APP_CLIENT_ID: \"1suuk1q53vnnlpvbago0jaefc2\",\r\n    IDENTITY_POOL_ID: \"us-east-1:69b7b4c9-864c-4841-a88d-f0de9e422e0d\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  //STRIPE_KEY: \"pk_test_v1amvR35uoCNduJfkqGB8RLD\",\r\n  s3: {\r\n    REGION: \"us-east-1\",\r\n    BUCKET: \"\",\r\n  },\r\n  apiGateway: {\r\n    REGION: \"us-east-1\",\r\n    URL: \"\",\r\n  },\r\n  cognito: {\r\n    REGION: \"us-east-1\",\r\n    USER_POOL_ID: \"\",\r\n    APP_CLIENT_ID: \"\",\r\n    IDENTITY_POOL_ID: \"\",\r\n  },\r\n};\r\n\r\n// Default to dev if not set\r\nconst config = process.env.REACT_APP_STAGE === \"prod\" ? prod : dev;\r\n\r\nexport default {\r\n  // Add common config values here\r\n  MAX_ATTACHMENT_SIZE: 5000000,\r\n  ...config,\r\n};\r\n",["387","388"],"D:\\dev\\frontend\\knUI\\src\\serviceWorker.ts",[],"D:\\dev\\frontend\\knUI\\src\\routes.tsx",[],"D:\\dev\\frontend\\knUI\\src\\theme\\index.ts",[],"D:\\dev\\frontend\\knUI\\src\\settings\\constants.ts",[],"D:\\dev\\frontend\\knUI\\src\\context\\auth.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Dashboard\\Dashboard.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\InlineLoader\\InlineLoader.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Layout.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Home\\Home.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Orders\\Orders.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Settings\\Settings.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\ProductForm\\Products.tsx",["389"],"import React, { useCallback, useContext } from \"react\";\nimport { styled } from \"baseui\";\nimport { Button } from \"baseui/button\";\nimport {\n  Grid,\n  Row as Rows,\n  Col as Column,\n} from \"../../components/FlexBox/FlexBox\";\nimport Input from \"../../components/Input/Input\";\nimport Select from \"../../components/Select/Select\";\n//import gql from \"graphql-tag\";\n//import { useQuery } from \"@apollo/react-hooks\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Header, Heading } from \"../../components/WrapperStyle\";\nimport Fade from \"react-reveal/Fade\";\nimport ProductCard from \"../../components/ProductCard/ProductCard\";\nimport NoResult from \"../../components/NoResult/NoResult\";\nimport { CURRENCY } from \"../../settings/constants\";\nimport Placeholder from \"../../components/Placeholder/Placeholder\";\n\nimport { useDrawerDispatch } from \"../../context/DrawerContext\";\nimport { Storage } from \"aws-amplify\";\nimport { AuthContext } from \"../../context/auth\";\n\nexport const ProductsRow = styled(\"div\", ({ $theme }) => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  marginTop: \"25px\",\n  backgroundColor: $theme.colors.backgroundF7,\n  position: \"relative\",\n  zIndex: \"1\",\n\n  \"@media only screen and (max-width: 767px)\": {\n    marginLeft: \"-7.5px\",\n    marginRight: \"-7.5px\",\n    marginTop: \"15px\",\n  },\n}));\n\nexport const Col = styled(Column, () => ({\n  \"@media only screen and (max-width: 767px)\": {\n    marginBottom: \"20px\",\n\n    \":last-child\": {\n      marginBottom: 0,\n    },\n  },\n}));\n\nconst Row = styled(Rows, () => ({\n  \"@media only screen and (min-width: 768px) and (max-width: 991px)\": {\n    alignItems: \"center\",\n  },\n}));\n\nexport const ProductCardWrapper = styled(\"div\", () => ({\n  height: \"100%\",\n}));\n\nexport const LoaderWrapper = styled(\"div\", () => ({\n  width: \"100%\",\n  height: \"100vh\",\n  display: \"flex\",\n  flexWrap: \"wrap\",\n}));\n\nexport const LoaderItem = styled(\"div\", () => ({\n  width: \"25%\",\n  padding: \"0 15px\",\n  marginBottom: \"30px\",\n}));\n\nconst GET_PRODUCTS = gql`\n  query Products($userid: String!) {\n    getProductBy(userid: $userid) {\n      id\n\n      name\n      type\n      image\n      # views\n      # sales\n      price\n    }\n  }\n`;\n/*\nconst GET_PRODUCTS = gql`\n  {\n    Products {\n      id\n\n      name\n      type\n      # views\n      # sales\n      price\n    }\n  }\n`;*/\n\nconst typeSelectOptions = [\n  { value: \"grocery\", label: \"Grocery\" },\n  { value: \"women-cloths\", label: \"Women Cloths\" },\n  { value: \"bags\", label: \"Bags\" },\n  { value: \"makeup\", label: \"Makeup\" },\n];\nconst priceSelectOptions = [\n  { value: \"highestToLowest\", label: \"Highest To Lowest\" },\n  { value: \"lowestToHighest\", label: \"Lowest To Highest\" },\n];\n\ntype User = {\n  userId: string;\n};\n\nexport default function Products() {\n  const { currentUser } = useContext(AuthContext);\n\n  const { data, loading, error } = useQuery(GET_PRODUCTS, {\n    variables: { userid: currentUser?.userId },\n  });\n\n  const dispatch = useDrawerDispatch();\n  const openDrawer = useCallback(\n    () => dispatch({ type: \"OPEN_DRAWER\", drawerComponent: \"PRODUCT_FORM\" }),\n    [dispatch]\n  );\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    return <div>Loading...</div>;\n  }\n\n  const getImg = async (image) => {\n    const im = await Storage.get(image, { level: \"public\" });\n    return im;\n  };\n\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col md={12}>\n          <Header style={{ marginBottom: 15 }}>\n            <Col md={2} xs={12}>\n              <Heading>Products</Heading>\n            </Col>\n\n            <Col md={10} xs={12}>\n              <Row>\n                <Col md={3} xs={12}>\n                  <Select\n                    options={typeSelectOptions}\n                    labelKey=\"label\"\n                    valueKey=\"value\"\n                    placeholder=\"Category Type\"\n                    //value={type}\n                    searchable={false}\n                    // onChange={handleCategoryType}\n                  />\n                </Col>\n\n                <Col md={3} xs={12}>\n                  <Select\n                    options={priceSelectOptions}\n                    labelKey=\"label\"\n                    valueKey=\"value\"\n                    //value={priceOrder}\n                    placeholder=\"Price\"\n                    searchable={false}\n                    //onChange={handlePriceSort}\n                  />\n                </Col>\n\n                <Col md={3} xs={12}>\n                  <Input\n                    //value={search}\n                    placeholder=\"Ex: Search By Name\"\n                    //onChange={handleSearch}\n                    clearable\n                  />\n                </Col>\n\n                <Col md={3} xs={12}>\n                  <Button onClick={openDrawer}>Add Products</Button>\n                </Col>\n              </Row>\n            </Col>\n          </Header>\n\n          <Row>\n            {data ? (\n              data.getProductBy && data.getProductBy.length !== 0 ? (\n                data.getProductBy.map((item: any, index: number) => (\n                  <Col\n                    md={4}\n                    lg={3}\n                    sm={6}\n                    xs={12}\n                    key={index}\n                    style={{ margin: \"15px 0\" }}\n                  >\n                    <Fade bottom duration={800} delay={index * 10}>\n                      <ProductCard\n                        title={item.name}\n                        weight={item.unit}\n                        image={getImg(item.image)}\n                        currency={CURRENCY}\n                        price={item.price}\n                        salePrice={item.salePrice}\n                        discountInPercent={item.discountInPercent}\n                        data={item}\n                      />\n                    </Fade>\n                  </Col>\n                ))\n              ) : (\n                <NoResult />\n              )\n            ) : (\n              <LoaderWrapper>\n                <LoaderItem>\n                  <Placeholder />\n                </LoaderItem>\n                <LoaderItem>\n                  <Placeholder />\n                </LoaderItem>\n                <LoaderItem>\n                  <Placeholder />\n                </LoaderItem>\n                <LoaderItem>\n                  <Placeholder />\n                </LoaderItem>\n              </LoaderWrapper>\n            )}\n          </Row>\n          {data && data.getProductBy && data.getProductBy.hasMore && (\n            <Row>\n              <Col\n                md={12}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <Button\n                //onClick={loadMore}\n                >\n                  Load More\n                </Button>\n              </Col>\n            </Row>\n          )}\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\n","D:\\dev\\frontend\\knUI\\src\\containers\\Profile\\Profile.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\SiteSettingForm\\SiteSettingForm.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Customers\\Customers.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\StaffMembers\\StaffMembers.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Projects\\Projects.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Login\\Login.tsx",["390"],"import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { AuthContext } from \"../../context/auth\";\nimport { Auth } from \"aws-amplify\";\n\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n} from \"@chakra-ui/react\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport Link from \"@material-ui/core/Link\";\nimport {\n  FormFields,\n  FormLabel,\n  Error,\n} from \"../../components/FormFields/FormFields\";\nimport { Wrapper, FormWrapper, LogoImage, LogoWrapper } from \"./Login.style\";\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\nimport Logoimage from \"../../image/kazi.png\";\nimport { SIGNUP, RESETPASSWORD } from \"../../settings/constants\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { isEmpty } from \"lodash-es\";\n\nconst initialValues = {\n  username: \"\",\n  password: \"\",\n};\n\nconst getLoginValidationSchema = () => {\n  return Yup.object().shape({\n    username: Yup.string().required(\"Username is Required!\"),\n    password: Yup.string().required(\"Password is Required!\"),\n  });\n};\n\nconst MyInput = ({ field, form, ...props }) => {\n  return <Input {...field} {...props} />;\n};\n\nexport default () => {\n  let history = useHistory();\n\n  const { refetchUser, userHasAuthenticated } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [confirmation, showConfirmation] = useState(false);\n  const [confirmationCode, setConfirmationCode] = useState(\"\");\n  const [isOpen, setIsOpen] = React.useState(false);\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n  const [helperTexts, setHelperText] = useState({\n    confirmation: \"\",\n    other: \"\",\n  });\n\n  let login = async ({ username, password }) => {\n    try {\n      await Auth.signIn(username, password);\n      setUsername(username);\n      userHasAuthenticated(true);\n      refetchUser();\n      history.push(\"/\");\n    } catch (e) {\n      setUsername(username);\n      if (e.code === \"UserNotConfirmedException\") {\n        showConfirmation(true);\n      }\n      setHelperText({\n        ...helperTexts,\n        other: e.message,\n      });\n      if (e.message === \"Incorrect username or password.\") {\n        setIsOpen(true);\n      }\n      console.log(\"hafha\", e.message);\n    }\n  };\n\n  const handleConfirmationSubmit = async (\n    e: React.FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    e.preventDefault();\n\n    if (!isEmpty(confirmationCode)) {\n      try {\n        await Auth.confirmSignUp(username, confirmationCode);\n        //await Auth.signIn(username, password);\n\n        userHasAuthenticated(true);\n        console.log(\"created user successfully\");\n        history.push(\"/\");\n      } catch (e) {\n        setConfirmationCode(\"\");\n        showConfirmation(true);\n        console.log(e);\n      }\n    } else {\n      console.log(\"Validation failed\");\n    }\n  };\n\n  const resendSignup = async () => {\n    try {\n      if (!username) return console.log(\"no user\");\n      await Auth.resendSignUp(username);\n      console.log(\"We sent you a new verification code\");\n    } catch (error) {\n      console.log(\"Error sending new code.\", { variant: \"error\" });\n    }\n  };\n\n  const errorPopover = () => {\n    return (\n      <>\n        <AlertDialog\n          isOpen={isOpen}\n          leastDestructiveRef={cancelRef}\n          onClose={onClose}\n        >\n          <AlertDialogOverlay>\n            <AlertDialogContent>\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                Delete Customer\n              </AlertDialogHeader>\n\n              <AlertDialogBody>\n                Are you sure? You can't undo this action afterwards.\n              </AlertDialogBody>\n\n              <AlertDialogFooter>\n                <Button ref={cancelRef} onClick={onClose}>\n                  Cancel\n                </Button>\n                <Button colorScheme=\"red\" onClick={onClose} ml={3}>\n                  Delete\n                </Button>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialogOverlay>\n        </AlertDialog>\n      </>\n    );\n  };\n  const confirmationForm = () => {\n    return (\n      <div>\n        <Dialog open={confirmation} aria-labelledby=\"form-dialog-title\">\n          <form\n            name=\"confirmation\"\n            //className={classes.form}\n            noValidate\n            onSubmit={handleConfirmationSubmit}\n          >\n            <DialogContent>\n              <DialogContentText>\n                please enter the confirmation code sent to your email address\n                here.\n              </DialogContentText>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"code\"\n                label=\"Confirmation Code\"\n                type=\"code\"\n                onChange={(e) => setConfirmationCode(e.target.value)}\n                fullWidth\n              />\n            </DialogContent>\n\n            <DialogActions>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                //className={classes.submit}\n              >\n                Sign Up\n              </Button>\n            </DialogActions>\n            <Button onClick={resendSignup}>Resend verification code</Button>\n          </form>\n        </Dialog>\n      </div>\n    );\n  };\n\n  return (\n    <Wrapper>\n      <FormWrapper>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={login}\n          render={({ errors, status, touched, isSubmitting }) => (\n            <Form>\n              <FormFields>\n                <LogoWrapper>\n                  <LogoImage src={Logoimage} alt=\"pickbazar-admin\" />\n                </LogoWrapper>\n              </FormFields>\n              <FormFields>\n                <FormLabel>Username</FormLabel>\n                <Field\n                  type=\"email\"\n                  name=\"username\"\n                  component={MyInput}\n                  placeholder=\"Ex: demo@demo.com\"\n                />\n                {errors.username && touched.username && (\n                  <Error>{errors.username}</Error>\n                )}\n              </FormFields>\n              <FormFields>\n                <FormLabel>Password</FormLabel>\n                <Field\n                  type=\"password\"\n                  name=\"password\"\n                  component={MyInput}\n                  helperText=\"Some important text\"\n                  placeholder=\"Ex: demo\"\n                />\n                {errors.password && touched.password && (\n                  <Error>{errors.password}</Error>\n                )}\n              </FormFields>\n              <Button\n                type=\"submit\"\n                disabled={isSubmitting}\n                overrides={{\n                  BaseButton: {\n                    style: ({ $theme }) => ({\n                      width: \"100%\",\n                      marginLeft: \"auto\",\n                      borderTopLeftRadius: \"3px\",\n                      borderTopRightRadius: \"3px\",\n                      borderBottomLeftRadius: \"3px\",\n                      borderBottomRightRadius: \"3px\",\n                    }),\n                  },\n                }}\n              >\n                Submit\n              </Button>\n\n              <FormFields>\n                <Link component={RouterLink} to={RESETPASSWORD} variant=\"body2\">\n                  {\"Forgot your password?\"}\n                </Link>\n              </FormFields>\n              <FormFields>\n                <Link component={RouterLink} to={SIGNUP} variant=\"body2\">\n                  {\"Join KaziNzuri\"}\n                </Link>\n              </FormFields>\n            </Form>\n          )}\n          validationSchema={getLoginValidationSchema}\n        />\n      </FormWrapper>\n      {confirmationForm()}\n      {errorPopover()}\n    </Wrapper>\n  );\n};\n","D:\\dev\\frontend\\knUI\\src\\containers\\NotFound\\NotFound.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\ResetPassword\\ResetPassword.tsx",["391"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport {\r\n  FormFields,\r\n  FormLabel,\r\n  FormTitle,\r\n  Error,\r\n} from \"../../components/FormFields/FormFields\";\r\nimport {\r\n  Wrapper,\r\n  FormWrapper,\r\n  LogoImage,\r\n  LogoWrapper,\r\n} from \"./ResetPassword.style\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Logoimage from \"../../image/kazi.png\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst getResetPasswordValidationSchema = () => {\r\n  return Yup.object().shape({\r\n    username: Yup.string().required(\"Username is Required!\"),\r\n  });\r\n};\r\n\r\nconst MyInput = ({ field, form, ...props }) => {\r\n  return <Input {...field} {...props} />;\r\n};\r\n\r\nexport default () => {\r\n  let history = useHistory();\r\n\r\n  const { userHasAuthenticated } = useContext(AuthContext);\r\n\r\n  const [confirmation, showConfirmation] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmationCode, setConfirmationCode] = useState(\"\");\r\n\r\n  let resetpassword = async ({ username }) => {\r\n    try {\r\n      await Auth.forgotPassword(username);\r\n      setUsername(username);\r\n      showConfirmation(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleConfirmationSubmit = async (\r\n    e: React.FormEvent<HTMLFormElement>\r\n  ): Promise<void> => {\r\n    e.preventDefault();\r\n    console.log(username);\r\n    try {\r\n      await Auth.forgotPasswordSubmit(username, confirmationCode, password);\r\n      userHasAuthenticated(true);\r\n\r\n      console.log(\"password reset\");\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const confirmationForm = () => {\r\n    return (\r\n      <div>\r\n        <Dialog open={confirmation} aria-labelledby=\"form-dialog-title\">\r\n          <form\r\n            name=\"confirmation\"\r\n            noValidate\r\n            onSubmit={handleConfirmationSubmit}\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                To reset your password, please enter the confirmation code sent\r\n                to your email address here.\r\n              </DialogContentText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"code\"\r\n                label=\"Confirmation code\"\r\n                type=\"code\"\r\n                onChange={(e) => setConfirmationCode(e.target.value)}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"password\"\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                //className={classes.submit}\r\n              >\r\n                Reset Password\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FormWrapper>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={resetpassword}\r\n          render={({ errors, status, touched, isSubmitting }) => (\r\n            <Form>\r\n              <FormFields>\r\n                <LogoWrapper>\r\n                  <LogoImage src={Logoimage} alt=\"pickbazar-admin\" />\r\n                </LogoWrapper>\r\n              </FormFields>\r\n              <FormTitle>Reset Password</FormTitle>\r\n              <FormFields>\r\n                <FormLabel>Username</FormLabel>\r\n                <Field\r\n                  type=\"username\"\r\n                  name=\"username\"\r\n                  component={MyInput}\r\n                  placeholder=\"Ex: demo@demo.com\"\r\n                />\r\n                {errors.username && touched.username && (\r\n                  <Error>{errors.username}</Error>\r\n                )}\r\n              </FormFields>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                overrides={{\r\n                  BaseButton: {\r\n                    style: ({ $theme }) => ({\r\n                      width: \"100%\",\r\n                      marginLeft: \"auto\",\r\n                      borderTopLeftRadius: \"3px\",\r\n                      borderTopRightRadius: \"3px\",\r\n                      borderBottomLeftRadius: \"3px\",\r\n                      borderBottomRightRadius: \"3px\",\r\n                    }),\r\n                  },\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          )}\r\n          validationSchema={getResetPasswordValidationSchema}\r\n        />\r\n      </FormWrapper>\r\n      {confirmationForm()}\r\n    </Wrapper>\r\n  );\r\n};\r\n","D:\\dev\\frontend\\knUI\\src\\containers\\SignUp\\SignUp.tsx",["392"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport {\r\n  FormFields,\r\n  FormLabel,\r\n  Error,\r\n} from \"../../components/FormFields/FormFields\";\r\nimport { Wrapper, FormWrapper, LogoImage, LogoWrapper } from \"./SignUp.style\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Logoimage from \"../../image/kazi.png\";\r\nimport { isEmpty } from \"lodash-es\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst getLoginValidationSchema = () => {\r\n  return Yup.object().shape({\r\n    username: Yup.string().required(\"Username is Required!\"),\r\n    password: Yup.string().required(\"Password is Required!\"),\r\n  });\r\n};\r\n\r\nconst MyInput = ({ field, form, ...props }) => {\r\n  return <Input {...field} {...props} />;\r\n};\r\n\r\nexport default () => {\r\n  let history = useHistory();\r\n\r\n  const { userHasAuthenticated } = useContext(AuthContext);\r\n\r\n  const [confirmation, showConfirmation] = useState(false);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [confirmationCode, setConfirmationCode] = useState(\"\");\r\n\r\n  let signup = async ({ username, password }) => {\r\n    Auth.signUp({\r\n      username: username,\r\n      password,\r\n    })\r\n      .then((user) => {\r\n        setUsername(username);\r\n        showConfirmation(true);\r\n      })\r\n      .catch((err) => {\r\n        if (err.code === \"UserNotConfirmedException\") {\r\n          showConfirmation(true);\r\n        }\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleConfirmationSubmit = async (\r\n    e: React.FormEvent<HTMLFormElement>\r\n  ): Promise<void> => {\r\n    e.preventDefault();\r\n\r\n    if (!isEmpty(confirmationCode)) {\r\n      try {\r\n        await Auth.confirmSignUp(username, confirmationCode);\r\n        //await Auth.signIn(username, password);\r\n        setUsername(username);\r\n        userHasAuthenticated(true);\r\n        console.log(\"created user successfully\");\r\n        history.push(\"/\");\r\n      } catch (e) {\r\n        setConfirmationCode(\"\");\r\n        showConfirmation(true);\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      console.log(\"Validation failed\");\r\n    }\r\n  };\r\n\r\n  const confirmationForm = () => {\r\n    return (\r\n      <div>\r\n        <Dialog open={confirmation} aria-labelledby=\"form-dialog-title\">\r\n          <form\r\n            name=\"confirmation\"\r\n            //className={classes.form}\r\n            noValidate\r\n            onSubmit={handleConfirmationSubmit}\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                To create your account successfully, please enter the\r\n                confirmation code sent to your email address here.\r\n              </DialogContentText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"code\"\r\n                label=\"Confirmation Code\"\r\n                type=\"code\"\r\n                onChange={(e) => setConfirmationCode(e.target.value)}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                //className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FormWrapper>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={signup}\r\n          render={({ errors, status, touched, isSubmitting }) => (\r\n            <Form>\r\n              <FormFields>\r\n                <LogoWrapper>\r\n                  <LogoImage src={Logoimage} alt=\"pickbazar-admin\" />\r\n                </LogoWrapper>\r\n              </FormFields>\r\n\r\n              <FormFields>\r\n                <FormLabel>Username/email</FormLabel>\r\n                <Field\r\n                  type=\"username\"\r\n                  name=\"username\"\r\n                  component={MyInput}\r\n                  placeholder=\"Ex: demo@demo.com\"\r\n                />\r\n                {errors.username && touched.username && (\r\n                  <Error>{errors.username}</Error>\r\n                )}\r\n              </FormFields>\r\n              <FormFields>\r\n                <FormLabel>Password</FormLabel>\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  component={MyInput}\r\n                  placeholder=\"Ex: demo\"\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <Error>{errors.password}</Error>\r\n                )}\r\n              </FormFields>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                overrides={{\r\n                  BaseButton: {\r\n                    style: ({ $theme }) => ({\r\n                      width: \"100%\",\r\n                      marginLeft: \"auto\",\r\n                      borderTopLeftRadius: \"3px\",\r\n                      borderTopRightRadius: \"3px\",\r\n                      borderBottomLeftRadius: \"3px\",\r\n                      borderBottomRightRadius: \"3px\",\r\n                    }),\r\n                  },\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          )}\r\n          validationSchema={getLoginValidationSchema}\r\n        />\r\n      </FormWrapper>\r\n      {confirmationForm()}\r\n    </Wrapper>\r\n  );\r\n};\r\n","D:\\dev\\frontend\\knUI\\src\\components\\FlexBox\\FlexBox.ts",[],"D:\\dev\\frontend\\knUI\\src\\containers\\SignUp\\SignUp.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\FormFields\\FormFields.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\ResetPassword\\ResetPassword.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\LineChart\\LineChart.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\RadialBarChart\\RadialBarChart.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\ColumnChart\\ColumnChart.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\DonutChart\\DonutChart.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Button\\Button.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Input\\Input.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Button\\Button.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\DonutChart\\DonutChart.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\AllSvgIcon.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\ColumnChart\\ColumnChart.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Box\\Box.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Charts\\Chart.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\RadialBarChart\\RadialBarChart.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Box\\Box.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\NotFound\\NotFound.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Login\\Login.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Projects\\Projects.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\WrapperStyle.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\NoResult\\NoResult.tsx",[],"D:\\dev\\frontend\\knUI\\src\\context\\DrawerContext.tsx",["393"],"import { useCreateContext } from './create-context';\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  drawerComponent: null,\r\n  data: null,\r\n};\r\ntype State = typeof initialState;\r\ntype Action = any;\r\nfunction reducer(state: State, action: Action) {\r\n  switch (action.type) {\r\n    case 'OPEN_DRAWER':\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        drawerComponent: action.drawerComponent,\r\n        data: action.data,\r\n      };\r\n    case 'CLOSE_DRAWER':\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        drawerComponent: null,\r\n        data: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst [useDrawerState, useDrawerDispatch, DrawerProvider] = useCreateContext(\r\n  initialState,\r\n  reducer\r\n);\r\n\r\nexport { useDrawerState, useDrawerDispatch, DrawerProvider };\r\n","D:\\dev\\frontend\\knUI\\src\\components\\CheckBox\\CheckBox.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\ProgressBar\\ProgressBar.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Select\\Select.tsx",["394"],"import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CarretDownIcon } from '../AllSvgIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CarretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","D:\\dev\\frontend\\knUI\\src\\containers\\StaffMembers\\StaffMembers.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Customers\\Customers.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\DrawerBox\\DrawerBox.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\DrawerItems\\DrawerItems.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Textarea\\Textarea.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Uploader\\Uploader.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Placeholder\\Placeholder.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\ProductCard\\ProductCard.tsx",[],"D:\\dev\\frontend\\knUI\\src\\context\\create-context.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\NoResult\\NoResult.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\ProductCard\\ProductCard.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Image\\Image.tsx",[],"D:\\dev\\frontend\\knUI\\src\\settings\\useDeviceType.js",[],"D:\\dev\\frontend\\knUI\\src\\settings\\useComponentSize.js",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Orders\\Orders.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\SettingsCard\\SettingsCard.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Topbar\\Topbar.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Layout.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\DrawerItems\\DrawerItems.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\ProjectCard\\ProjectCard.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Topbar\\Topbar.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Sidebar\\Sidebar.tsx",[],"D:\\dev\\frontend\\knUI\\src\\settings\\debounce.ts",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\StickerCard\\StickerCard.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\MapWidget\\MapWidget.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\GradiantGraphChart\\GradiantGraphChart.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\GraphChart\\GraphChart.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\ProductForm\\ProductUpdateForm.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\ProductForm\\ProductForm.tsx",["395"],"import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Uploader from \"../../components/Uploader/Uploader\";\nimport Input from \"../../components/Input/Input\";\nimport { Textarea } from \"../../components/Textarea/Textarea\";\nimport Select from \"../../components/Select/Select\";\nimport Button from \"../../components/Button/Button\";\nimport DrawerBox from \"../../components/DrawerBox/DrawerBox\";\nimport { Row, Col } from \"../../components/FlexBox/FlexBox\";\nimport {\n  Form,\n  FieldDetails,\n  DrawerTitleWrapper,\n  DrawerTitle,\n  ButtonGroup,\n} from \"../DrawerItems/DrawerItems.style\";\nimport { FormFields, FormLabel } from \"../../components/FormFields/FormFields\";\nimport { gql, useMutation } from \"@apollo/client\";\n//import config from \"../../config\";\nimport { Storage } from \"aws-amplify\";\nimport { v1 } from \"uuid\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { PRODUCTS } from \"../../settings/constants\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth\";\nimport imageCompression from \"browser-image-compression\";\n\nconst options = [\n  { value: \"Fruits & Vegetables\", name: \"Fruits & Vegetables\", id: \"1\" },\n  { value: \"Meat & Fish\", name: \"Meat & Fish\", id: \"2\" },\n  { value: \"Purse\", name: \"Purse\", id: \"3\" },\n  { value: \"Hand bags\", name: \"Hand bags\", id: \"4\" },\n  { value: \"Shoulder bags\", name: \"Shoulder bags\", id: \"5\" },\n  { value: \"Wallet\", name: \"Wallet\", id: \"6\" },\n  { value: \"Laptop bags\", name: \"Laptop bags\", id: \"7\" },\n  { value: \"Women Dress\", name: \"Women Dress\", id: \"8\" },\n  { value: \"Outer Wear\", name: \"Outer Wear\", id: \"9\" },\n  { value: \"Pants\", name: \"Pants\", id: \"10\" },\n];\n\nconst typeOptions = [\n  { value: \"grocery\", name: \"Grocery\", id: \"1\" },\n  { value: \"women-cloths\", name: \"Women Cloths\", id: \"2\" },\n  { value: \"bags\", name: \"Bags\", id: \"3\" },\n  { value: \"makeup\", name: \"Makeup\", id: \"4\" },\n];\n\nconst CREATE_PRODUCT = gql`\n  mutation AddProduct($product: ProductInput!) {\n    addProduct(data: $product) {\n      id\n    }\n  }\n`;\n\ninterface ProductData {\n  id: string;\n  name: string;\n  type: string;\n  description: string;\n  image: string;\n  price: number;\n  unit: string;\n  salePrice: number;\n  discountInPercent: number;\n  quantity: number;\n  slug: string;\n}\n\ntype Props = {};\n\nconst ProductsUpdateForm: React.FC<Props> = () => {\n  const { register, handleSubmit, formState, setValue } = useForm();\n  const [id, setId] = useState(v1());\n  const [name, setName] = useState();\n  const [type] = useState();\n  const [price, setPrice] = useState();\n  const [unit, setUnit] = useState();\n  const [salePrice, setSalePrice] = useState();\n  const [discountInPercent, setDiscountInPercent] = useState();\n  const [description, setDescription] = React.useState(\"\");\n  const [quantity, setQuantity] = useState();\n  const [categories, setCategories] = useState();\n  const { currentUser } = useContext(AuthContext);\n  let history = useHistory();\n\n  const { isSubmitting } = formState;\n\n  //Storage.configure({ level: \"private\" });\n\n  const handleMultiChange = ({ value }) => {\n    setValue(\"reactSelect\", value);\n  };\n\n  const handleUploader = async (files) => {\n    console.log(files);\n    const imageFile = files[0];\n    console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob);\n    console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n\n    const options = {\n      maxSizeMB: 0.2,\n      maxWidthOrHeight: 440,\n      useWebWorker: true,\n      maxIteration: 20,\n    };\n    try {\n      const compressedFile = await imageCompression(imageFile, options);\n      console.log(\n        \"compressedFile instanceof Blob\",\n        compressedFile instanceof Blob\n      );\n      console.log(\n        `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\n      );\n      setValue(\"image\", compressedFile);\n      // await uploadToServer(compressedFile); // write your own logic\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  React.useEffect(() => {\n    register({ name: \"reactSelect\" });\n    register({ name: \"image\" });\n  }, [register]);\n\n  const [Product, { error: mutationError, loading }] = useMutation(\n    CREATE_PRODUCT\n  );\n  if (loading) return <p>Loading...</p>;\n\n  const onSubmit = async ({ image }) => {\n    const filename = `${Date.now()}-${image.name}`;\n    setId(v1());\n    await Storage.put(filename, image, {\n      contentType: image.type,\n    });\n\n    const newProduct = {\n      id: id,\n      name: name,\n      type: type || \"one\",\n      description: description,\n      image: filename || \"one\",\n      price: Number(price),\n      unit: unit,\n      salePrice: Number(salePrice),\n      discountInPercent: Number(discountInPercent),\n      quantity: Number(quantity),\n      slug: name,\n      userid: currentUser?.userId,\n      categories: categories || \"one\",\n    };\n    Product({\n      variables: { product: newProduct },\n    });\n\n    history.push(PRODUCTS);\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (mutationError) return <p>Error :( Please try again</p>;\n\n  return (\n    <>\n      <DrawerTitleWrapper>\n        <DrawerTitle>Add New Product</DrawerTitle>\n      </DrawerTitleWrapper>\n\n      <Form\n        onSubmit={handleSubmit(onSubmit)}\n        style={{ height: \"100%\" }}\n        noValidate\n      >\n        <Scrollbars\n          autoHide\n          renderView={(props) => (\n            <div {...props} style={{ ...props.style, overflowX: \"hidden\" }} />\n          )}\n          renderTrackHorizontal={(props) => (\n            <div\n              {...props}\n              style={{ display: \"none\" }}\n              className=\"track-horizontal\"\n            />\n          )}\n        >\n          <Row>\n            <Col lg={4}>\n              <FieldDetails>Upload your Product image here</FieldDetails>\n            </Col>\n            <Col lg={8}>\n              <DrawerBox>\n                <Uploader onChange={handleUploader} />\n              </DrawerBox>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4}>\n              <FieldDetails>\n                Add your Product description and necessary information from here\n              </FieldDetails>\n            </Col>\n\n            <Col lg={8}>\n              <DrawerBox>\n                <FormFields>\n                  <FormLabel>Name</FormLabel>\n                  <Input\n                    inputRef={register({ required: true, maxLength: 20 })}\n                    name=\"name\"\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </FormFields>\n\n                <FormFields>\n                  <FormLabel>Description</FormLabel>\n                  <Textarea\n                    onChange={(e) => setDescription(e.target.value)}\n                    value={description}\n                    // onChange={handleDescriptionChange}\n                  />\n                </FormFields>\n\n                <FormFields>\n                  <FormLabel>Unit</FormLabel>\n                  <Input\n                    type=\"text\"\n                    inputRef={register}\n                    onChange={(e) => setUnit(e.target.value)}\n                    name=\"unit\"\n                  />\n                </FormFields>\n\n                <FormFields>\n                  <FormLabel>Price</FormLabel>\n                  <Input\n                    type=\"number\"\n                    inputRef={register({ required: true })}\n                    name=\"price\"\n                    onChange={(e) => setPrice(e.target.value)}\n                  />\n                </FormFields>\n\n                <FormFields>\n                  <FormLabel>Sale Price</FormLabel>\n                  <Input\n                    type=\"number\"\n                    inputRef={register}\n                    onChange={(e) => setSalePrice(e.target.value)}\n                    name=\"salePrice\"\n                  />\n                </FormFields>\n\n                <FormFields>\n                  <FormLabel>Discount In Percent</FormLabel>\n                  <Input\n                    type=\"number\"\n                    inputRef={register}\n                    name=\"discountInPercent\"\n                    onChange={(e) => setDiscountInPercent(e.target.value)}\n                  />\n                </FormFields>\n\n                <FormFields>\n                  <FormLabel>Product Quantity</FormLabel>\n                  <Input\n                    type=\"number\"\n                    onChange={(e) => setQuantity(e.target.value)}\n                    inputRef={register}\n                    name=\"quantity\"\n                  />\n                </FormFields>\n\n                <FormFields>\n                  <FormLabel>Type</FormLabel>\n                  <Select\n                    options={typeOptions}\n                    labelKey=\"name\"\n                    valueKey=\"value\"\n                    placeholder=\"Product Type\"\n                    //value={type}\n                    searchable={false}\n                    //onChange={handleTypeChange}\n                    onChange={(e) => setCategories(e.target.value)}\n                    overrides={{\n                      Placeholder: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.fontBold14,\n                            color: $theme.colors.textNormal,\n                          };\n                        },\n                      },\n                      DropdownListItem: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.fontBold14,\n                            color: $theme.colors.textNormal,\n                          };\n                        },\n                      },\n                      OptionContent: {\n                        style: ({ $theme, $selected }) => {\n                          return {\n                            ...$theme.typography.fontBold14,\n                            color: $selected\n                              ? $theme.colors.textDark\n                              : $theme.colors.textNormal,\n                          };\n                        },\n                      },\n                      SingleValue: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.fontBold14,\n                            color: $theme.colors.textNormal,\n                          };\n                        },\n                      },\n                      Popover: {\n                        props: {\n                          overrides: {\n                            Body: {\n                              style: { zIndex: 5 },\n                            },\n                          },\n                        },\n                      },\n                    }}\n                  />\n                </FormFields>\n\n                <FormFields>\n                  <FormLabel>Categories</FormLabel>\n                  <Select\n                    options={options}\n                    labelKey=\"name\"\n                    valueKey=\"value\"\n                    placeholder=\"Product Tag\"\n                    //value={tag}\n                    onChange={handleMultiChange}\n                    overrides={{\n                      Placeholder: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.fontBold14,\n                            color: $theme.colors.textNormal,\n                          };\n                        },\n                      },\n                      DropdownListItem: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.fontBold14,\n                            color: $theme.colors.textNormal,\n                          };\n                        },\n                      },\n                      Popover: {\n                        props: {\n                          overrides: {\n                            Body: {\n                              style: { zIndex: 5 },\n                            },\n                          },\n                        },\n                      },\n                    }}\n                    multi\n                  />\n                </FormFields>\n              </DrawerBox>\n            </Col>\n          </Row>\n        </Scrollbars>\n\n        <ButtonGroup>\n          <Button\n            //kind={KIND.minimal}\n            //onClick={closeDrawer}\n            disabled={isSubmitting}\n            overrides={{\n              BaseButton: {\n                style: ({ $theme }) => ({\n                  width: \"50%\",\n                  borderTopLeftRadius: \"3px\",\n                  borderTopRightRadius: \"3px\",\n                  borderBottomRightRadius: \"3px\",\n                  borderBottomLeftRadius: \"3px\",\n                  marginRight: \"15px\",\n                  color: $theme.colors.red400,\n                }),\n              },\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button\n            type=\"submit\"\n            disabled={isSubmitting}\n            overrides={{\n              BaseButton: {\n                style: ({ $theme }) => ({\n                  width: \"50%\",\n                  borderTopLeftRadius: \"3px\",\n                  borderTopRightRadius: \"3px\",\n                  borderBottomRightRadius: \"3px\",\n                  borderBottomLeftRadius: \"3px\",\n                }),\n              },\n            }}\n          >\n            Add Product\n          </Button>\n        </ButtonGroup>\n      </Form>\n    </>\n  );\n};\n\nexport default ProductsUpdateForm;\n","D:\\dev\\frontend\\knUI\\src\\components\\ProjectCard\\ProjectCard.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Drawer\\Drawer.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\CampaingForm\\CampaingForm.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Notification\\Notification.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\CategoryForm\\CategoryForm.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Popover\\Popover.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\StaffMemberForm\\StaffMemberForm.tsx",[],"D:\\dev\\frontend\\knUI\\src\\containers\\Layout\\Sidebar\\Sidebar.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\MapWidget\\MapWidget.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\StickerCard\\StickerCard.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Widgets\\GradiantGraphChart\\GradiantGraphChart.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Notification\\NotificationCard.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\Notification\\Notification.style.tsx",[],"D:\\dev\\frontend\\knUI\\src\\components\\PhoneInput\\PhoneInput.tsx",[],{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","replacedBy":"399"},{"ruleId":"400","severity":1,"message":"401","line":41,"column":1,"nodeType":"402","endLine":45,"endColumn":3},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","replacedBy":"399"},{"ruleId":"403","severity":1,"message":"404","line":113,"column":6,"nodeType":"405","messageId":"406","endLine":113,"endColumn":10},{"ruleId":"400","severity":1,"message":"407","line":55,"column":1,"nodeType":"402","endLine":278,"endColumn":3},{"ruleId":"400","severity":1,"message":"407","line":45,"column":1,"nodeType":"402","endLine":184,"endColumn":3},{"ruleId":"400","severity":1,"message":"407","line":41,"column":1,"nodeType":"402","endLine":197,"endColumn":3},{"ruleId":"408","severity":2,"message":"409","line":30,"column":61,"nodeType":"405","endLine":30,"endColumn":77},{"ruleId":"400","severity":1,"message":"407","line":9,"column":1,"nodeType":"402","endLine":66,"endColumn":3},{"ruleId":"403","severity":1,"message":"410","line":56,"column":11,"nodeType":"405","messageId":"406","endLine":56,"endColumn":22},"no-native-reassign",["411"],"no-negated-in-lhs",["412"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","react-hooks/rules-of-hooks","React Hook \"useCreateContext\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","'ProductData' is defined but never used.","no-global-assign","no-unsafe-negation"]